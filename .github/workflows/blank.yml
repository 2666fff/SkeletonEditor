name: Build and Release Skeleton Editor

on:
  push:
    tags:
      - 'v*'  # 当推送以v开头的标签时触发，例如v1.0.0
  workflow_dispatch:  # 允许手动触发

env:
  DOTNET_VERSION: '8.0.x'
  BUILD_CONFIGURATION: 'Release'
  PROJECT_PATH: 'SkeletonEditor/SkeletonEditor.csproj'

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }}
      
    - name: Build solution
      run: dotnet build ${{ env.PROJECT_PATH }} --configuration ${{ env.BUILD_CONFIGURATION }} --no-restore
      
    - name: Publish application
      run: dotnet publish ${{ env.PROJECT_PATH }} -c ${{ env.BUILD_CONFIGURATION }} -o ./publish --no-build
      
    - name: Extract version
      id: get_version
      shell: pwsh
      run: |
        $version = (Get-Item ./publish/SkeletonEditor.exe).VersionInfo.FileVersion
        if (-not $version) { $version = "1.0.0" }
        echo "version=$version" >> $env:GITHUB_OUTPUT
        
    - name: Create release artifact
      run: |
        $version = "${{ steps.get_version.outputs.version }}"
        Compress-Archive -Path ./publish/* -DestinationPath SkeletonEditor-$version.zip
        
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: SkeletonEditor
        path: SkeletonEditor-*.zip
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: SkeletonEditor-*.zip
        asset_name: SkeletonEditor-${{ steps.get_version.outputs.version }}.zip
        asset_content_type: application/zip
